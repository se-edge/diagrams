@startuml
title "EdgeAppFactory install"

participant EdgeAppFactory as EAF
database Storage as Stor
participant EdgeApplication as EApp
participant cloud

[->EAF: install(json)

EAF->Stor ++: getDescription(appId)
Stor-->EAF --:

alt description not present

    EAF->EApp ++: downloadDescription()

    EApp->cloud: downloadDescription()
    EApp->EApp: checkCertificate()
    EApp->EApp: checkIntegrity()

    EApp-->EAF --:

    EAF->EAF: whoAmI()
    EAF->EApp ++: [[http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.githubusercontent.com/se-edge/diagrams/develop/ApplicationManager/ComposeApplication.interpret.puml&fmt=svg interpret(description)]]

    EApp-->EAF --: description

    EAF->EApp **: [[http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.githubusercontent.com/se-edge/diagrams/develop/ApplicationManager/ComposeApplication.new.puml&fmt=svg new(description)]]
    EApp-->EAF --:

    EAF->EApp ++: [[http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.githubusercontent.com/se-edge/diagrams/develop/ApplicationManager/ComposeApplication.downloadApp.puml&fmt=svg downloadApp()]]
    EApp-->EAF --:

    note over EAF: if download fail, abort, so description is not save

    EAF->Stor ++: saveDescription()
    Stor-->EAF --:
else
    EAF->EAF: whoAmI()

    EAF->EApp **: [[http://www.plantuml.com/plantuml/proxy?cache=no&src=https://raw.githubusercontent.com/se-edge/diagrams/develop/ApplicationManager/ComposeApplication.new.puml&fmt=svg new(description)]]
    EApp-->EAF --:
end


EAF-->[: EdgeApp

@enduml
